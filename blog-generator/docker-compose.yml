version: '3.8'

services:
  # FastAPI Backend Services
  api:
    build:
      context: ./services
      dockerfile: Dockerfile
    container_name: blog-generator-api
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    volumes:
      - ./services/outputs:/app/outputs
      - ./services/.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - blog-generator-network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-generator-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - blog-generator-network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: blog-generator-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates if needed
    depends_on:
      - frontend
      - api
    restart: unless-stopped
    networks:
      - blog-generator-network
    profiles:
      - production  # Only start with --profile production

networks:
  blog-generator-network:
    driver: bridge

volumes:
  blog_outputs:
    driver: local